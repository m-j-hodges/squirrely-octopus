
const router = require('express').Router();
require('dotenv').config();
const Inquiry = require('../../models')
const nodemailer = require('nodemailer')
const fs = require('fs')
const path = require('node:path')
const { google } = require("googleapis");
const OAuth2 = google.auth.OAuth2;
const mongoose = require("mongoose");

const createTransporter = async () => {
  const oauth2Client = new OAuth2(
    process.env.CLIENT_ID,
    process.env.CLIENT_SECRET,
    "https://developers.google.com/oauthplayground"
  )
  
  oauth2Client.setCredentials({
    refresh_token: process.env.REFRESH_TOKEN
  })

  oauth2Client.refreshHandler = () => {
    oauth2Client.refreshToken(process.env.REFRESH_TOKEN)

  }

  const accessToken = new Promise((resolve, reject) => {
  
    oauth2Client.getAccessToken((err, token) => {
  if(err){
    reject(`failed to create token because of error: ${err}`)
  }
  resolve(token);
  })
  
  })


let transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    type: 'OAuth2',
    user: process.env.EMAIL,
    accessToken: accessToken,
    clientId: process.env.CLIENT_ID,
    clientSecret: process.env.CLIENT_SECRET,
    refreshToken: process.env.REFRESH_TOKEN
  }
})

return transporter
}


let sendEmail = async (emailOpts) => {
  let emailTransporter = await createTransporter();
await emailTransporter.sendMail(emailOpts);
}

router.post('/', async (req, res) => {
const username = req.body.body.name
const newEmail = req.body.body.email
const newMessage = req.body.body.message

const newInquiry = await Inquiry.create([{name: username, email: newEmail, message: newMessage}])



const emailOptions = {
  from: process.env.EMAIL,
  to: newEmail,
  subject: 'Thank you for contacting Matthew Hodges',
  text: 'Thank you for reaching out to me. I will respond within the next few days.'
};

try{
  sendEmail(emailOptions);

} catch(err) {
console.log(`There was an error: ${err} `)

}

}
)

router.get('/getImage', (req, res) => {
  
const imgArray = [ 
  {img_1: '../../public/img1.jpg'},
  {img_2: '../../public/img2.jpg'},
  {img_3: '../../public/img3.jpg'},
  {img_4: '../../public/img4.jpg'},
  {img_5: '../../public/img5.jpg'},
  {img_6: '../../public/img6.jpg'}
]

const randomImage = imgArray[Math.floor(imgArray.length*Math.random())];
let childRandomImage
for(let value of Object.values(randomImage)) {
  childRandomImage = value
}
const pathRandomImage = path.join(__dirname, childRandomImage)

res.sendFile(pathRandomImage, (err)=> {
 err ? console.log(err) : console.log('image send successfully')

})

})

module.exports = router