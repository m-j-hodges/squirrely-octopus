
const router = require('express').Router();
const Inquiry = require('../../models')
const nodemailer = require('nodemailer')

let transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    type: 'OAuth2',
    user: 'avidrunner07@gmail.com',
    pass: '|w?c;MU$Ge[Y ',
    clientId: '200277711136-l2a5lbfb2mn2il0tbfa37mrejoomdlh1.apps.googleusercontent.com',
    clientSecret: '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',
    refreshToken: '1//044AttB3w8Ly-CgYIARAAGAQSNwF-L9IrqNHspDm6DUe7pkya2Q_VXgInByKbSj42rqC044RqGg-t5jKrDVN4AO7Fk1fCnWnsZH4'
  }
})

let mailOptions = {
  from: 'avidrunner07@gmail.com',
  to: '',
  subject: 'Thank you for reaching out.',
  text: 'Thank you for reaching out to me. I will respond within the next few days.'
};

router.post('/', async (req, res) => {
const username = req.body.body.name
const newEmail = req.body.body.email
const newMessage = req.body.body.message

try {
const newInquiry = Inquiry.create({name: username, email: newEmail, message: newMessage})
.then((result) => {console.log(result)


res.status(200).json({success:true})
})
}
catch {
res.json({message: 'There was an error saving your message.'})
}
const findNewRecord = await Inquiry.findOne({email: newEmail})
mailOptions.to = findNewRecord.email
transporter.sendMail(mailOptions, (error, info) => {
  error ? console.log(error) : console.log( `Email sent: ${info.response}`)

})

}
)


module.exports = router